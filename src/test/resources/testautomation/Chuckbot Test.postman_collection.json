{
	"info": {
		"_postman_id": "c5b4e159-0d19-4cbe-b8f0-f63f8290899f",
		"name": "Chuckbot Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "REST randomJoke with user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Response Status (OK)\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"pm.test(\"Check JSON response and store ID of random joke\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).exist",
							"    pm.expect(jsonData.jokeText).exist",
							"    pm.expect(jsonData.creationDate).exist",
							"    console.log(\"Saving the id of the random joke for deletion in later teststeps. Id is: \" + jsonData.id);",
							"    pm.collectionVariables.set(\"jokeIDRand\",jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{userPassword_01}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{userUser_01}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/jokes/random",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"jokes",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "REST randomJoke with admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Response Status (OK)\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"pm.test(\"Check JSON response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).exist",
							"    pm.expect(jsonData.jokeText).exist",
							"    pm.expect(jsonData.creationDate).exist",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{adminPassword_01}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{adminUser_01}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/jokes/random",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"jokes",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "Landing Page with user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Response Status (OK)\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/alljokes?sort\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{userPassword_01}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{userUser_01}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Landing Page with admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Response Status (OK)\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/alljokes?sort\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{adminPassword_01}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{adminUser_01}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "List alljokes with user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Response Status (OK)\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/alljokes?sort\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{userPassword_01}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{userUser_01}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/alljokes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"alljokes"
					]
				}
			},
			"response": []
		},
		{
			"name": "List alljokes with admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Response Status (OK)\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/alljokes?sort\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{adminPassword_01}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{adminUser_01}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/alljokes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"alljokes"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddNewJokeForm with user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Response Status (Forbidden)\", function () {",
							"    pm.response.to.have.status(\"Forbidden\");",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Access Denied for this User!\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{userPassword_01}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{userUser_01}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/addNewJokeForm",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"addNewJokeForm"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddNewJokeForm with admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Response Status (OK)\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Add your joke\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{adminPassword_01}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{adminUser_01}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/addNewJokeForm",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"addNewJokeForm"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove joke with user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Response Status (Forbidden)\", function () {",
							"    pm.response.to.have.status(\"Forbidden\");",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Access Denied for this User!\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//Older version code",
							"//console.log(\"Collection variable jokeID is \" + pm.collectionVariables.get(\"jokeID\"));",
							"//var jokeID = + pm.collectionVariables.get(\"jokeID\");",
							"//console.log(\"Will try to delete joke with next higher ID!\");",
							"//pm.collectionVariables.set(\"jokeID\",++jokeID);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{userPassword_01}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{userUser_01}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/delete?id={{jokeIDRand}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"delete"
					],
					"query": [
						{
							"key": "id",
							"value": "{{jokeIDRand}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AddNewJokeForm with admin Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Response Status (OK)\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.expect(pm.response.text()).not.include(\"{{jokeIDRand}}\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//Older version code",
							"//console.log(\"Collection variable jokeID is \" + pm.collectionVariables.get(\"jokeID\"));",
							"//var jokeID = + pm.collectionVariables.get(\"jokeID\");",
							"//console.log(\"Will try to delete joke with next higher ID!\");",
							"//pm.collectionVariables.set(\"jokeID\",++jokeID);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{adminPassword_01}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{adminUser_01}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/delete?id={{jokeIDRand}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"delete"
					],
					"query": [
						{
							"key": "id",
							"value": "{{jokeIDRand}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "jokeID",
			"value": "50"
		},
		{
			"key": "adminUser_01",
			"value": "admin"
		},
		{
			"key": "adminPassword_01",
			"value": "admin"
		},
		{
			"key": "userUser_01",
			"value": "user"
		},
		{
			"key": "userPassword_01",
			"value": "user"
		},
		{
			"key": "base_url",
			"value": "localhost:8080"
		},
		{
			"key": "jokeIDRand",
			"value": "0"
		}
	]
}